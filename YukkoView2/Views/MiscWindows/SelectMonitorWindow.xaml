<Window x:Class="YukkoView2.Views.MiscWindows.SelectMonitorWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:s="clr-namespace:Shinta"
        xmlns:sb="clr-namespace:Shinta.Behaviors"
        xmlns:v="clr-namespace:YukkoView2.Views.MiscWindows"
        xmlns:vmmwvm="clr-namespace:YukkoView2.ViewModels.MiscWindowViewModels"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="{Binding Title}" ShowInTaskbar="False" ResizeMode="NoResize" SizeToContent="WidthAndHeight" >

    <Window.DataContext>
        <vmmwvm:SelectMonitorWindowViewModel />
    </Window.DataContext>

    <behaviors:Interaction.Behaviors>
        <sb:WindowBindingSupportBehavior IsCascade="True" HelpBox="True" HelpBoxClickedCommand="{Binding HelpClickedCommand}" HelpBoxClickedCommandParameter="Displaysentaku" />
    </behaviors:Interaction.Behaviors>

    <behaviors:Interaction.Triggers>
        <!-- When ContentRendered event raised, Initialize method of ViewModel would be called. -->
        <behaviors:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize" />
        </behaviors:EventTrigger>

        <!-- Dispose method is called, when Window closing. -->
        <behaviors:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction />
        </behaviors:EventTrigger>

        <!-- If you make user choose 'OK or Cancel' closing Window, then please use Window Close cancel Behavior. -->

        <l:InteractionMessageTrigger MessageKey="{x:Static s:Common.MESSAGE_KEY_WINDOW_CLOSE}" Messenger="{Binding Messenger}">
            <l:WindowInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False" />
        </l:InteractionMessageTrigger>

    </behaviors:Interaction.Triggers>

    <StackPanel>
        <RadioButton Content="MPC-BE が表示されているディスプレイ" IsChecked="{Binding SelectMonitorMpcBe}" GroupName="Disp" Margin="20,20,20,0" />
        <StackPanel Orientation="Horizontal" Margin="20,10,20,0" >
            <RadioButton Content="指定ディスプレイ：" IsChecked="{Binding SelectMonitorManual}" GroupName="Disp" />
            <ComboBox ItemsSource="{Binding MonitorIndices}" SelectedIndex="{Binding SelectedMonitorIndex}" IsEnabled="{Binding SelectMonitorManual}" MinWidth="50" materialDesign:ComboBoxAssist.ClassicMode="True" />
        </StackPanel>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="20,20,20,20" >
            <Button Content="_OK" IsDefault="True" Width="100" Height="Auto" Command="{Binding ButtonOkClickedCommand}" Margin="0,0,20,0" sb:IsFocusedAttachedBehavior.IsFocused="{Binding IsButtonOkFocused}" />
            <Button Content="キャンセル" IsCancel="True" Width="100" Height="Auto" Margin="0" Padding="4" Style="{StaticResource MaterialDesignRaisedLightButton}" />
        </StackPanel>
    </StackPanel>
</Window>