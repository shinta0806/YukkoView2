<Window x:Class="YukkoView2.Views.MiscWindows.Yv2SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:msm="clr-namespace:YukkoView2.Models.SharedMisc"
        xmlns:s="clr-namespace:Shinta"
        xmlns:sb="clr-namespace:Shinta.Behaviors"
        xmlns:v="clr-namespace:YukkoView2.Views.MiscWindows"
        xmlns:vmmwvm="clr-namespace:YukkoView2.ViewModels.MiscWindowViewModels"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="{Binding Title}" ShowInTaskbar="False" ResizeMode="NoResize" SizeToContent="WidthAndHeight" >

    <Window.DataContext>
        <vmmwvm:Yv2SettingsWindowViewModel />
    </Window.DataContext>

    <behaviors:Interaction.Behaviors>
        <sb:WindowBindingSupportBehavior IsCascade="True" MinimizeBox="False" />
    </behaviors:Interaction.Behaviors>

    <behaviors:Interaction.Triggers>
        <!-- When ContentRendered event raised, Initialize method of ViewModel would be called. -->
        <behaviors:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize" />
        </behaviors:EventTrigger>

        <!-- Dispose method is called, when Window closing. -->
        <behaviors:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction />
        </behaviors:EventTrigger>

        <!-- If you make user choose 'OK or Cancel' closing Window, then please use Window Close cancel Behavior. -->

        <l:InteractionMessageTrigger MessageKey="{x:Static s:Common.MESSAGE_KEY_WINDOW_CLOSE}" Messenger="{Binding Messenger}">
            <l:WindowInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False" />
        </l:InteractionMessageTrigger>

        <l:InteractionMessageTrigger MessageKey="{x:Static s:Common.MESSAGE_KEY_OPEN_OPEN_FILE_DIALOG}" Messenger="{Binding Messenger}">
            <l:OpenFileDialogInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False" />
        </l:InteractionMessageTrigger>

        <l:InteractionMessageTrigger MessageKey="{x:Static s:Common.MESSAGE_KEY_OPEN_SAVE_FILE_DIALOG}" Messenger="{Binding Messenger}">
            <l:SaveFileDialogInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False" />
        </l:InteractionMessageTrigger>

    </behaviors:Interaction.Triggers>

    <StackPanel>
        <TabControl Height="350" Width="500" Margin="10,10,10,0" >
            <TabItem Header="設定" >
                <TabItem.DataContext>
                    <Binding Path="Yv2SettingsTabItemSettingsViewModel" />
                </TabItem.DataContext>
                <StackPanel >
                    <CheckBox Content="起動と同時にコメント表示を開始する" IsChecked="{Binding PlayOnStart}" Margin="20,20,0,0" />
                    <StackPanel Orientation="Horizontal" Margin="20,15,0,0" >
                        <CheckBox Content="ディスプレイの上下" IsChecked="{Binding EnableMargin}" />
                        <ComboBox ItemsSource="{Binding MarginPercents}" SelectedValue="{Binding MarginPercent}" Width="50" IsEnabled="{Binding EnableMargin}" materialDesign:ComboBoxAssist.ClassicMode="True" Margin="10,0,0,0" />
                        <Label Content="% にはコメントを表示しない" Margin="10,0,0,0" />
                    </StackPanel>
                    <CheckBox Content="予約一覧を表示する" IsChecked="{Binding RequestList}" Margin="20,15,0,0" />
                </StackPanel>
            </TabItem>
            <TabItem Header="コメント受信" >
                <TabItem.DataContext>
                    <Binding Path="Yv2SettingsTabItemReceiveViewModel" />
                </TabItem.DataContext>
                <StackPanel >
                    <DockPanel Margin="0,10,0,0">
                        <Border BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" BorderThickness="1" Height="3" VerticalAlignment="Center" Margin="0" Width="20"/>
                        <Label Content="コメントサーバー指定方法" Margin="10,0"/>
                        <Border BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" BorderThickness="1" Height="3" VerticalAlignment="Center" Margin="0"/>
                    </DockPanel>
                    <StackPanel Margin="20,10,0,0" >
                        <RadioButton Content="ゆかりの設定を自動取得" IsChecked="{Binding CommentServerAuto}" />
                        <DockPanel Margin="30,5,20,0" IsEnabled="{Binding CommentServerAuto}" >
                            <Label Content="ゆかり設定ファイル (_Y)：" Width="130" HorizontalContentAlignment="Right" />
                            <TextBox Text="{Binding YukariConfigPathSeed}" />
                        </DockPanel>
                        <RadioButton Content="手動で指定" IsChecked="{Binding CommentServerManual}" Margin="0,10,0,0" />
                        <StackPanel Margin="30,5,20,0" IsEnabled="{Binding CommentServerManual}" >
                            <DockPanel >
                                <Label Content="コメントサーバー (_C)：" Width="130" HorizontalContentAlignment="Right" />
                                <TextBox Text="{Binding ServerUrlSeed}" />
                            </DockPanel>
                            <DockPanel >
                                <Label Content="ルーム名 (_R)：" Width="130" HorizontalContentAlignment="Right" />
                                <TextBox Text="{Binding RoomNameSeed}" />
                            </DockPanel>
                        </StackPanel>
                    </StackPanel>
                    <DockPanel Margin="0,20,0,0">
                        <Border BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" BorderThickness="1" Height="3" VerticalAlignment="Center" Margin="0" Width="20"/>
                        <Label Content="コメント受信方法" Margin="10,0"/>
                        <Border BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" BorderThickness="1" Height="3" VerticalAlignment="Center" Margin="0"/>
                    </DockPanel>
                    <StackPanel Margin="20,10,0,0" >
                        <StackPanel Orientation="Horizontal" >
                            <RadioButton Content="プッシュ通知（推奨）" IsChecked="{Binding CommentReceivePush}" />
                            <Label Grid.Column="1" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Left">
                                <Hyperlink Command="{Binding HelpClickedCommand}" CommandParameter="Pushtsuuchi" >
                                    <TextBlock Text="詳細情報" />
                                </Hyperlink>
                            </Label>
                        </StackPanel>
                        <RadioButton Content="ダウンロード" IsChecked="{Binding CommentReceiveDownload}" Margin="0,10,0,0" />
                    </StackPanel>
                </StackPanel>
            </TabItem>
            <TabItem Header="メンテナンス" >
                <TabItem.DataContext>
                    <Binding Path="Yv2SettingsTabItemMaintenanceViewModel" />
                </TabItem.DataContext>
                <StackPanel >
                    <StackPanel Margin="20,20,0,0">
                        <CheckBox Content="ゆっこビュー 2 の最新情報を自動的に確認する (_L)" IsChecked="{Binding CheckRss}" />
                    </StackPanel>
                    <DockPanel Margin="20,10,20,0">
                        <Button Height="Auto" Content="今すぐ最新情報を確認 (_N)" Style="{StaticResource MaterialDesignRaisedLightButton}" Margin="0" Width="220" DockPanel.Dock="Right" Padding="4" Command="{Binding ButtonCheckRssClickedCommand}"/>
                        <ProgressBar Height="Auto" Margin="0,0,10,0" Visibility="{Binding ProgressBarCheckRssVisibility}" IsIndeterminate="True"/>
                    </DockPanel>
                    <StackPanel Margin="20,10,0,0">
                        <Label Content="設定のバックアップ（ファイルに保存）"/>
                    </StackPanel>
                    <StackPanel Margin="0,10,20,0">
                        <Button Height="Auto" Content="設定のバックアップ(_B)" Style="{StaticResource MaterialDesignRaisedLightButton}" Margin="0" Width="220" DockPanel.Dock="Right" HorizontalAlignment="Right" Command="{Binding ButtonBackupClickedCommand}" />
                        <Button Height="Auto" Content="設定の復元(_R)" Style="{StaticResource MaterialDesignRaisedLightButton}" Margin="0,10,0,0" Width="220" DockPanel.Dock="Right" HorizontalAlignment="Right" Command="{Binding ButtonRestoreClickedCommand}" />
                    </StackPanel>
                </StackPanel>
            </TabItem>
        </TabControl>
        <DockPanel Margin="20,20,20,20" LastChildFill="False" >
            <StackPanel Orientation="Horizontal" >
                <Button Content="初期化" Width="100" Height="Auto" ToolTip="環境設定を初期設定に戻す" Margin="0" Padding="4" Style="{StaticResource MaterialDesignRaisedLightButton}" Command="{Binding ButtonDefaultClickedCommand}" />
            </StackPanel>
            <StackPanel Orientation="Horizontal" DockPanel.Dock="Right" >
                <Button Content="_OK" IsDefault="True" Width="100" Height="Auto" Command="{Binding ButtonOkClickedCommand}" Margin="0,0,20,0" sb:IsFocusedAttachedBehavior.IsFocused="{Binding IsButtonOkFocused}" />
                <Button Content="キャンセル" IsCancel="True" Width="100" Height="Auto" Margin="0" Padding="4" Style="{StaticResource MaterialDesignRaisedLightButton}" />
            </StackPanel>
        </DockPanel>
    </StackPanel>
</Window>